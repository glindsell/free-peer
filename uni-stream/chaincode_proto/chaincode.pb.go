// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chaincode.proto

package chaincode

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message containing the user's name.
type ChaincodeRequest struct {
	Input                string   `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChaincodeRequest) Reset()         { *m = ChaincodeRequest{} }
func (m *ChaincodeRequest) String() string { return proto.CompactTextString(m) }
func (*ChaincodeRequest) ProtoMessage()    {}
func (*ChaincodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97136ef4b384cc22, []int{0}
}

func (m *ChaincodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChaincodeRequest.Unmarshal(m, b)
}
func (m *ChaincodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChaincodeRequest.Marshal(b, m, deterministic)
}
func (m *ChaincodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChaincodeRequest.Merge(m, src)
}
func (m *ChaincodeRequest) XXX_Size() int {
	return xxx_messageInfo_ChaincodeRequest.Size(m)
}
func (m *ChaincodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChaincodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChaincodeRequest proto.InternalMessageInfo

func (m *ChaincodeRequest) GetInput() string {
	if m != nil {
		return m.Input
	}
	return ""
}

// The response message containing the greetings
type ChaincodeResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChaincodeResponse) Reset()         { *m = ChaincodeResponse{} }
func (m *ChaincodeResponse) String() string { return proto.CompactTextString(m) }
func (*ChaincodeResponse) ProtoMessage()    {}
func (*ChaincodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97136ef4b384cc22, []int{1}
}

func (m *ChaincodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChaincodeResponse.Unmarshal(m, b)
}
func (m *ChaincodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChaincodeResponse.Marshal(b, m, deterministic)
}
func (m *ChaincodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChaincodeResponse.Merge(m, src)
}
func (m *ChaincodeResponse) XXX_Size() int {
	return xxx_messageInfo_ChaincodeResponse.Size(m)
}
func (m *ChaincodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChaincodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChaincodeResponse proto.InternalMessageInfo

func (m *ChaincodeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*ChaincodeRequest)(nil), "chaincode.ChaincodeRequest")
	proto.RegisterType((*ChaincodeResponse)(nil), "chaincode.ChaincodeResponse")
}

func init() { proto.RegisterFile("chaincode.proto", fileDescriptor_97136ef4b384cc22) }

var fileDescriptor_97136ef4b384cc22 = []byte{
	// 172 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0xce, 0x48, 0xcc,
	0xcc, 0x4b, 0xce, 0x4f, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0x0b, 0x28,
	0x69, 0x70, 0x09, 0x38, 0xc3, 0x38, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x22, 0x5c,
	0xac, 0x99, 0x79, 0x05, 0xa5, 0x25, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x10, 0x8e, 0x92,
	0x2e, 0x97, 0x20, 0x92, 0xca, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x09, 0x2e, 0xf6, 0xdc,
	0xd4, 0xe2, 0xe2, 0xc4, 0xf4, 0x54, 0xa8, 0x62, 0x18, 0xd7, 0x28, 0x92, 0x8b, 0x13, 0xae, 0x5c,
	0xc8, 0x87, 0x8b, 0xdb, 0x37, 0x31, 0x1b, 0x6e, 0x81, 0xb4, 0x1e, 0xc2, 0x45, 0xe8, 0xb6, 0x4b,
	0xc9, 0x60, 0x97, 0x84, 0x58, 0xa8, 0xc4, 0x60, 0xc0, 0xe8, 0xa4, 0xc7, 0x25, 0x95, 0x99, 0xaf,
	0x97, 0x5e, 0x54, 0x90, 0xac, 0x97, 0x5a, 0x91, 0x98, 0x5b, 0x90, 0x93, 0x5a, 0x8c, 0xd0, 0xe3,
	0xc4, 0x07, 0xd7, 0x14, 0x00, 0xf2, 0x6c, 0x00, 0x63, 0x12, 0x1b, 0xd8, 0xd7, 0xc6, 0x80, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x32, 0xdb, 0xd2, 0xfe, 0x08, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChaincodeClient is the client API for Chaincode service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChaincodeClient interface {
	// Sends a greeting
	MakeRequest(ctx context.Context, in *ChaincodeRequest, opts ...grpc.CallOption) (Chaincode_MakeRequestClient, error)
}

type chaincodeClient struct {
	cc *grpc.ClientConn
}

func NewChaincodeClient(cc *grpc.ClientConn) ChaincodeClient {
	return &chaincodeClient{cc}
}

func (c *chaincodeClient) MakeRequest(ctx context.Context, in *ChaincodeRequest, opts ...grpc.CallOption) (Chaincode_MakeRequestClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Chaincode_serviceDesc.Streams[0], "/chaincode.Chaincode/MakeRequest", opts...)
	if err != nil {
		return nil, err
	}
	x := &chaincodeMakeRequestClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Chaincode_MakeRequestClient interface {
	Recv() (*ChaincodeResponse, error)
	grpc.ClientStream
}

type chaincodeMakeRequestClient struct {
	grpc.ClientStream
}

func (x *chaincodeMakeRequestClient) Recv() (*ChaincodeResponse, error) {
	m := new(ChaincodeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ChaincodeServer is the server API for Chaincode service.
type ChaincodeServer interface {
	// Sends a greeting
	MakeRequest(*ChaincodeRequest, Chaincode_MakeRequestServer) error
}

func RegisterChaincodeServer(s *grpc.Server, srv ChaincodeServer) {
	s.RegisterService(&_Chaincode_serviceDesc, srv)
}

func _Chaincode_MakeRequest_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ChaincodeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChaincodeServer).MakeRequest(m, &chaincodeMakeRequestServer{stream})
}

type Chaincode_MakeRequestServer interface {
	Send(*ChaincodeResponse) error
	grpc.ServerStream
}

type chaincodeMakeRequestServer struct {
	grpc.ServerStream
}

func (x *chaincodeMakeRequestServer) Send(m *ChaincodeResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Chaincode_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chaincode.Chaincode",
	HandlerType: (*ChaincodeServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "MakeRequest",
			Handler:       _Chaincode_MakeRequest_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "chaincode.proto",
}
